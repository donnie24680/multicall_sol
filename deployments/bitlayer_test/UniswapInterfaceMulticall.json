{
  "address": "0xFa93C04E491629a454edcf25ed580bDf5F14e35F",
  "abi": [
    {
      "inputs": [],
      "name": "getCurrentBlockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct UniswapInterfaceMulticall.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "gasUsed",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct UniswapInterfaceMulticall.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdc0b9d5341038d8ede361b13af099deef3ab2f2ae1f101fffbfc7ba42f1c06ca",
  "receipt": {
    "to": null,
    "from": "0xCBE385A3C677bF4463DCb15C6f98cFaD66B4f90f",
    "contractAddress": "0xFa93C04E491629a454edcf25ed580bDf5F14e35F",
    "transactionIndex": 0,
    "gasUsed": "591509",
    "logsBloom": "0x
    "blockHash": "0xc88da837d35d3fa9cca2572ec23a04ce5b59ddff2de98b5ec7a64fddfb0b0be8",
    "transactionHash": "0xdc0b9d5341038d8ede361b13af099deef3ab2f2ae1f101fffbfc7ba42f1c06ca",
    "logs": [],
    "blockNumber": 3876636,
    "cumulativeGasUsed": "591509",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "90df68e3c9a594896ce607fb13e1276e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct UniswapInterfaceMulticall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct UniswapInterfaceMulticall.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A fork of Multicall2 specifically tailored for the Uniswap Interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapInterfaceMulticall.sol\":\"UniswapInterfaceMulticall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniswapInterfaceMulticall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\n/// @notice A fork of Multicall2 specifically tailored for the Uniswap Interface\\ncontract UniswapInterfaceMulticall {\\n    struct Call {\\n        address target;\\n        uint256 gasLimit;\\n        bytes callData;\\n    }\\n\\n    struct Result {\\n        bool success;\\n        uint256 gasUsed;\\n        bytes returnData;\\n    }\\n\\n    function getCurrentBlockTimestamp() public view returns (uint256 timestamp) {\\n        timestamp = block.timestamp;\\n    }\\n\\n    function getEthBalance(address addr) public view returns (uint256 balance) {\\n        balance = addr.balance;\\n    }\\n\\n    function multicall(Call[] memory calls) public returns (uint256 blockNumber, Result[] memory returnData) {\\n        blockNumber = block.number;\\n        returnData = new Result[](calls.length);\\n        for (uint256 i = 0; i < calls.length; i++) {\\n            (address target, uint256 gasLimit, bytes memory callData) =\\n            (calls[i].target, calls[i].gasLimit, calls[i].callData);\\n            uint256 gasLeftBefore = gasleft();\\n            (bool success, bytes memory ret) = target.call{gas: gasLimit}(callData);\\n            uint256 gasUsed = gasLeftBefore - gasleft();\\n            returnData[i] = Result(success, gasUsed, ret);\\n        }\\n    }\\n}\",\"keccak256\":\"0x68e206984c1cb3f30d0f965a6aac4892981bcf204f7803020e8a504d4858ffeb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506109c2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e3146100645780634d2301cc14610095575b600080fd5b61004e6100c5565b60405161005b91906102d7565b60405180910390f35b61007e60048036038101906100799190610646565b6100cd565b60405161008c92919061084a565b60405180910390f35b6100af60048036038101906100aa919061087a565b61027a565b6040516100bc91906102d7565b60405180910390f35b600042905090565b60006060439150825167ffffffffffffffff8111156100ef576100ee61031c565b5b60405190808252806020026020018201604052801561012857816020015b61011561029b565b81526020019060019003908161010d5790505b50905060005b835181101561027457600080600086848151811061014f5761014e6108a7565b5b60200260200101516000015187858151811061016e5761016d6108a7565b5b60200260200101516020015188868151811061018d5761018c6108a7565b5b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101cd9190610912565b60006040518083038160008787f1925050503d806000811461020b576040519150601f19603f3d011682016040523d82523d6000602084013e610210565b606091505b509150915060005a846102239190610958565b90506040518060600160405280841515815260200182815260200183815250898981518110610255576102546108a7565b5b602002602001018190525050505050505050808060010191505061012e565b50915091565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b604051806060016040528060001515815260200160008152602001606081525090565b6000819050919050565b6102d1816102be565b82525050565b60006020820190506102ec60008301846102c8565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103548261030b565b810181811067ffffffffffffffff821117156103735761037261031c565b5b80604052505050565b60006103866102f2565b9050610392828261034b565b919050565b600067ffffffffffffffff8211156103b2576103b161031c565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103fd826103d2565b9050919050565b61040d816103f2565b811461041857600080fd5b50565b60008135905061042a81610404565b92915050565b610439816102be565b811461044457600080fd5b50565b60008135905061045681610430565b92915050565b600080fd5b600067ffffffffffffffff82111561047c5761047b61031c565b5b6104858261030b565b9050602081019050919050565b82818337600083830152505050565b60006104b46104af84610461565b61037c565b9050828152602081018484840111156104d0576104cf61045c565b5b6104db848285610492565b509392505050565b600082601f8301126104f8576104f7610306565b5b81356105088482602086016104a1565b91505092915050565b600060608284031215610527576105266103c8565b5b610531606061037c565b905060006105418482850161041b565b600083015250602061055584828501610447565b602083015250604082013567ffffffffffffffff811115610579576105786103cd565b5b610585848285016104e3565b60408301525092915050565b60006105a461059f84610397565b61037c565b905080838252602082019050602084028301858111156105c7576105c66103c3565b5b835b8181101561060e57803567ffffffffffffffff8111156105ec576105eb610306565b5b8086016105f98982610511565b855260208501945050506020810190506105c9565b5050509392505050565b600082601f83011261062d5761062c610306565b5b813561063d848260208601610591565b91505092915050565b60006020828403121561065c5761065b6102fc565b5b600082013567ffffffffffffffff81111561067a57610679610301565b5b61068684828501610618565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b6106d0816106bb565b82525050565b6106df816102be565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561071f578082015181840152602081019050610704565b60008484015250505050565b6000610736826106e5565b61074081856106f0565b9350610750818560208601610701565b6107598161030b565b840191505092915050565b600060608301600083015161077c60008601826106c7565b50602083015161078f60208601826106d6565b50604083015184820360408601526107a7828261072b565b9150508091505092915050565b60006107c08383610764565b905092915050565b6000602082019050919050565b60006107e08261068f565b6107ea818561069a565b9350836020820285016107fc856106ab565b8060005b85811015610838578484038952815161081985826107b4565b9450610824836107c8565b925060208a01995050600181019050610800565b50829750879550505050505092915050565b600060408201905061085f60008301856102c8565b818103602083015261087181846107d5565b90509392505050565b6000602082840312156108905761088f6102fc565b5b600061089e8482850161041b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b60006108ec826106e5565b6108f681856108d6565b9350610906818560208601610701565b80840191505092915050565b600061091e82846108e1565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610963826102be565b915061096e836102be565b925082820390508181111561098657610985610929565b5b9291505056fea26469706673582212204ff8d05559e8a0ad17f22aea68afbd404cda73bc8d6423b42d4344afa22a1a6c64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e3146100645780634d2301cc14610095575b600080fd5b61004e6100c5565b60405161005b91906102d7565b60405180910390f35b61007e60048036038101906100799190610646565b6100cd565b60405161008c92919061084a565b60405180910390f35b6100af60048036038101906100aa919061087a565b61027a565b6040516100bc91906102d7565b60405180910390f35b600042905090565b60006060439150825167ffffffffffffffff8111156100ef576100ee61031c565b5b60405190808252806020026020018201604052801561012857816020015b61011561029b565b81526020019060019003908161010d5790505b50905060005b835181101561027457600080600086848151811061014f5761014e6108a7565b5b60200260200101516000015187858151811061016e5761016d6108a7565b5b60200260200101516020015188868151811061018d5761018c6108a7565b5b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101cd9190610912565b60006040518083038160008787f1925050503d806000811461020b576040519150601f19603f3d011682016040523d82523d6000602084013e610210565b606091505b509150915060005a846102239190610958565b90506040518060600160405280841515815260200182815260200183815250898981518110610255576102546108a7565b5b602002602001018190525050505050505050808060010191505061012e565b50915091565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b604051806060016040528060001515815260200160008152602001606081525090565b6000819050919050565b6102d1816102be565b82525050565b60006020820190506102ec60008301846102c8565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103548261030b565b810181811067ffffffffffffffff821117156103735761037261031c565b5b80604052505050565b60006103866102f2565b9050610392828261034b565b919050565b600067ffffffffffffffff8211156103b2576103b161031c565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103fd826103d2565b9050919050565b61040d816103f2565b811461041857600080fd5b50565b60008135905061042a81610404565b92915050565b610439816102be565b811461044457600080fd5b50565b60008135905061045681610430565b92915050565b600080fd5b600067ffffffffffffffff82111561047c5761047b61031c565b5b6104858261030b565b9050602081019050919050565b82818337600083830152505050565b60006104b46104af84610461565b61037c565b9050828152602081018484840111156104d0576104cf61045c565b5b6104db848285610492565b509392505050565b600082601f8301126104f8576104f7610306565b5b81356105088482602086016104a1565b91505092915050565b600060608284031215610527576105266103c8565b5b610531606061037c565b905060006105418482850161041b565b600083015250602061055584828501610447565b602083015250604082013567ffffffffffffffff811115610579576105786103cd565b5b610585848285016104e3565b60408301525092915050565b60006105a461059f84610397565b61037c565b905080838252602082019050602084028301858111156105c7576105c66103c3565b5b835b8181101561060e57803567ffffffffffffffff8111156105ec576105eb610306565b5b8086016105f98982610511565b855260208501945050506020810190506105c9565b5050509392505050565b600082601f83011261062d5761062c610306565b5b813561063d848260208601610591565b91505092915050565b60006020828403121561065c5761065b6102fc565b5b600082013567ffffffffffffffff81111561067a57610679610301565b5b61068684828501610618565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b6106d0816106bb565b82525050565b6106df816102be565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561071f578082015181840152602081019050610704565b60008484015250505050565b6000610736826106e5565b61074081856106f0565b9350610750818560208601610701565b6107598161030b565b840191505092915050565b600060608301600083015161077c60008601826106c7565b50602083015161078f60208601826106d6565b50604083015184820360408601526107a7828261072b565b9150508091505092915050565b60006107c08383610764565b905092915050565b6000602082019050919050565b60006107e08261068f565b6107ea818561069a565b9350836020820285016107fc856106ab565b8060005b85811015610838578484038952815161081985826107b4565b9450610824836107c8565b925060208a01995050600181019050610800565b50829750879550505050505092915050565b600060408201905061085f60008301856102c8565b818103602083015261087181846107d5565b90509392505050565b6000602082840312156108905761088f6102fc565b5b600061089e8482850161041b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b60006108ec826106e5565b6108f681856108d6565b9350610906818560208601610701565b80840191505092915050565b600061091e82846108e1565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610963826102be565b915061096e836102be565b925082820390508181111561098657610985610929565b5b9291505056fea26469706673582212204ff8d05559e8a0ad17f22aea68afbd404cda73bc8d6423b42d4344afa22a1a6c64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A fork of Multicall2 specifically tailored for the Uniswap Interface",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}